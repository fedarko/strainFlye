# Based roughly on the main.yml and standalone.yml workflows in
# https://github.com/biocore/empress/blob/master/.github/workflows/,
# and on https://docs.github.com/en/actions/quickstart
name: strainFlye CI
on: [push, pull_request]
jobs:
  build:
    runs-on: ubuntu-latest

    # For now (https://github.com/alimanfoo/pysamstats/blob/master/setup.py),
    # it seems like pysamstats + pysam only works with Python 3.7 and lower.
    # Ideally we could un-pin this eventually, but for now we can just mandate
    # Python 3.7 be used.
    strategy:
      matrix:
        python-version: [3.6, 3.7]

    steps:

      # Updating from v2 to v3 to match, as of writing,
      # https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python
      - name: Check out code
        uses: actions/checkout@v3

      # https://github.com/conda-incubator/setup-miniconda#example-3-other-options
      - name: Install conda dependencies
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: strainflye
          environment-file: environment.yml
          python-version: ${{ matrix.python-version }}

      # We need to keep saying "run this command from within the 'strainflye'
      # conda environment", and we can do this easily by prefixing commands
      # with "conda run -n" (as done in EMPress' main.yml file, linked above).
      # I don't know of a more elegant way to do this; I do know that
      # installing everything into the "base" environment (as done in, e.g.,
      # https://autobencoder.com/2020-08-24-conda-actions) would remove the
      # need to keep re-activating the strainflye environment, but it'd have
      # the effect of polluting the base environment (which is not ideal
      # practice, according to
      # https://github.com/marketplace/actions/setup-miniconda#environment-activation).
      - name: Install strainFlye (and pip dependencies)
        run: conda run -n strainflye pip install -e .[dev]

      - name: Lint and stylecheck
        run: conda run -n strainflye make stylecheck

      - name: Run tests
        run: conda run -n strainflye make test

      - name: Upload code coverage information to Codecov
        uses: codecov/codecov-action@v2
